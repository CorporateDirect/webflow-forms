!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.WebflowForms=e():t.WebflowForms=e()}(this,(()=>(()=>{const t={config:{branchingRadioSelector:".radio_field.radio-type.is-active-inputactive",branchingRadioContainerSelector:".radio_component",errorMessageSelector:".text-size-tiny.error-state",nextButtonSelector:'[data-form="next-btn"], input[type="submit"]',submitButtonSelector:'input[type="submit"], button[type="submit"]',errorClass:"wf-radio-error",buttonDisabledClass:"wf-button-disabled",defaultErrorMessage:"Please make a selection to continue"},radioGroups:new Map,initialized:!1,init:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document;this.initialized&&t===document||(console.log("🎯 Initializing Branching Radio Validator"),this.discoverRadioGroups(t),this.setupEventListeners(t),this.updateButtonStates(),this.addStyles(),t===document&&(this.initialized=!0),console.log(`✅ Found ${this.radioGroups.size} branching radio groups`))},discoverRadioGroups:function(t){t.querySelectorAll(this.config.branchingRadioSelector+' input[type="radio"]').forEach((t=>{const e=t.name;if(!e)return;const o=t.closest(this.config.branchingRadioContainerSelector),r=o?o.parentElement.querySelector(this.config.errorMessageSelector):null;this.radioGroups.has(e)||this.radioGroups.set(e,{name:e,radios:[],container:o,errorElement:r,isRequired:!0,customMessage:this.getCustomErrorMessage(o,r),currentStep:t.closest('[data-form="step"]'),isValid:!1}),this.radioGroups.get(e).radios.push(t)}))},getCustomErrorMessage:function(t,e){return t&&t.dataset.validationMessage?t.dataset.validationMessage:e&&e.textContent.trim()?e.textContent.trim().replace(/<[^>]*>/g,""):this.config.defaultErrorMessage},setupEventListeners:function(t){t.addEventListener("change",(t=>{this.isBranchingRadio(t.target)&&this.handleRadioChange(t.target)})),t.addEventListener("submit",(t=>{if(!this.validateCurrentStep(t.target))return t.preventDefault(),t.stopPropagation(),this.focusFirstError(),!1})),t.addEventListener("click",(t=>{if(t.target.matches(this.config.nextButtonSelector)){const e=t.target.closest('[data-form="step"]');if(e&&!this.validateStep(e))return t.preventDefault(),t.stopPropagation(),this.focusFirstError(e),!1}}))},isBranchingRadio:function(t){return"radio"===t.type&&t.closest(this.config.branchingRadioSelector)},handleRadioChange:function(t){const e=t.name,o=this.radioGroups.get(e);o&&(o.isValid=!0,this.clearGroupError(o),this.updateButtonStates(),console.log(`✅ Branching radio group "${e}" validated: ${t.value}`))},validateCurrentStep:function(t){const e=Array.from(t.querySelectorAll('[data-form="step"]')).filter((t=>"none"!==t.style.display&&null!==t.offsetParent));let o=!0;return e.forEach((t=>{this.validateStep(t)||(o=!1)})),o},validateStep:function(t){let e=!0;return this.radioGroups.forEach(((o,r)=>{o.radios.some((e=>t.contains(e)))&&o.isRequired&&(this.validateGroup(r)||(e=!1))})),e},validateGroup:function(t){const e=this.radioGroups.get(t);return!e||!e.isRequired||(!this.isGroupVisible(e)||(e.radios.some((t=>t.checked))?(this.clearGroupError(e),e.isValid=!0,!0):(this.showGroupError(e),e.isValid=!1,!1)))},isGroupVisible:function(t){return!t.currentStep||"none"!==t.currentStep.style.display&&null!==t.currentStep.offsetParent},showGroupError:function(t){t.errorElement&&(t.radios.forEach((t=>{const e=t.closest(this.config.branchingRadioSelector);e&&e.classList.add(this.config.errorClass),t.setAttribute("aria-invalid","true")})),t.errorElement.style.display="block",t.errorElement.setAttribute("role","alert"),console.log(`❌ Showing error for branching radio group: ${t.name}`))},clearGroupError:function(t){t.errorElement&&(t.radios.forEach((t=>{const e=t.closest(this.config.branchingRadioSelector);e&&e.classList.remove(this.config.errorClass),t.removeAttribute("aria-invalid")})),t.errorElement.style.display="none",t.errorElement.removeAttribute("role"))},updateButtonStates:function(){document.querySelectorAll(this.config.nextButtonSelector).forEach((t=>{const e=t.closest('[data-form="step"]');if(!e||"none"===e.style.display)return;let o=!1,r=!0;this.radioGroups.forEach(((t,i)=>{t.radios.some((t=>e.contains(t)))&&t.isRequired&&(o=!0,t.radios.some((t=>t.checked))||(r=!1))})),o&&!r?(t.disabled=!0,t.classList.add(this.config.buttonDisabledClass)):(t.disabled=!1,t.classList.remove(this.config.buttonDisabledClass))}))},focusFirstError:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;t||document;for(let[e,o]of this.radioGroups)if((!t||o.radios.some((e=>t.contains(e))))&&o.isRequired&&!o.isValid){const t=o.radios[0];if(t){t.focus(),t.scrollIntoView({behavior:"smooth",block:"center"});break}}},addStyles:function(){if(document.getElementById("branching-radio-validation-styles"))return;const t=`\n            <style id="branching-radio-validation-styles">\n            .radio_field.${this.config.errorClass} {\n                border-color: #dc3545 !important;\n                background-color: rgba(220, 53, 69, 0.05) !important;\n            }\n            \n            .${this.config.buttonDisabledClass} {\n                opacity: 0.6 !important;\n                cursor: not-allowed !important;\n                pointer-events: none !important;\n            }\n            \n            .text-size-tiny.error-state[style*="display: block"] {\n                animation: fadeInError 0.3s ease-in-out;\n            }\n            \n            @keyframes fadeInError {\n                from { opacity: 0; transform: translateY(-5px); }\n                to { opacity: 1; transform: translateY(0); }\n            }\n            \n            .radio_field.${this.config.errorClass}:focus-within {\n                border-color: #dc3545 !important;\n                box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25) !important;\n            }\n            </style>\n        `;document.head.insertAdjacentHTML("beforeend",t)},isGroupValid:function(t){const e=this.radioGroups.get(t);return!e||e.isValid},getInvalidGroups:function(){const t=[];return this.radioGroups.forEach(((e,o)=>{e.isRequired&&!e.isValid&&t.push(o)})),t},clearAllErrors:function(){this.radioGroups.forEach((t=>{this.clearGroupError(t)}))},refresh:function(){this.radioGroups.clear(),this.init()}};return"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>{t.init()})):t.init(),window.BranchingRadioValidator=t,console.log("🎯 Branching Radio Validator loaded successfully"),{}})()));